# events {
#   # 同時接続数
#     worker_connections 16;
# }
server {
  listen 80;
  # この指定は無くてもよさそう
  server_name localhost;
  charset UTF-8;
  index index.html index.htm;
  location = /{
    # server_name localhost;
    root /usr/share/nginx/html;
  }
  location / {
    root /usr/share/nginx/html;
    try_files $uri $uri/ /index.html;
  }

  error_page   500 502 503 504  /50x.html;
  # location = /50x.html {
  #     root   html;
  # }
  location ~ ^/css/*\.(css)$ {
    root /usr/share/nginx/html;

  }
  location ~ ^/[^/]*\.(css)$ {
    root /usr/share/nginx/html/css;
  }

  location ~ ^/js/*\.(js)$ {
    root /usr/share/nginx/html;
  }
  location ~ ^/[^/]*\.(js)$ {
    root /usr/share/nginx/html/js;
  }

  location ~ ^/img/*\.(jpg|jpeg|png|gif|ico|woff|woff2|ttf)$ {
    root /usr/share/nginx/html;
  }
  location ~ ^/[^/]*\.(jpg|jpeg|png|gif|ico|woff|woff2|ttf)$ {
    root /usr/share/nginx/html/img;
  }
  location /api {
    proxy_redirect off;
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "upgrade";
    # proxy_set_header Host $host;
    # docker network bridgeを使う場合はコンテナ名でアクセス
    # hostならhost.docker.internalが使える？
    # host.docker.internalを使うと､アクセス先がLANになる
    proxy_pass http://${FASTAPI}:8084/api/v01/event;
  }
  #下記のページ間リンクはnginx管理外のポートなので機能しなさそう
  location /redoc/ {
    proxy_redirect off;
    proxy_pass http://${FASTAPI}:8084/redoc/;
  }
  location /docs {
    proxy_redirect off;
    proxy_pass http://${FASTAPI}:8084/docs;
  }
}